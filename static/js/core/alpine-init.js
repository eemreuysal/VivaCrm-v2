/**
 * VivaCRM - Alpine.js Initialization
 * 
 * Bu dosya, Alpine.js'in t√ºm bile≈üenlerini ve store'larƒ±nƒ± merkezi olarak
 * ba≈ülatan mod√ºld√ºr. Mod√ºler bir yapƒ± saƒülayarak kodu daha d√ºzenli ve 
 * bakƒ±mƒ± kolay hale getirir.
 */

import { createLogger, formatters, ensureNamespace } from './utils.js';
import { setupHtmxIntegration } from './htmx-alpine-bridge.js';
import * as Alpine from '../alpine/index.js';

// Logger olu≈ütur
const logger = createLogger('Alpine-Init', {
  emoji: 'üèîÔ∏è'
});

/**
 * Alpine.js i√ßin gerekli bile≈üen ve store'larƒ± y√ºkler
 * 
 * @param {Object} options - Ba≈ülatma se√ßenekleri
 * @param {boolean} options.initializeNow - Hemen ba≈ülatma/ba≈ülatmama
 * @param {string} options.pageType - Sayfa t√ºr√º ('dashboard', 'auth', vb.)
 * @returns {boolean} - Ba≈ülatma ba≈üarƒ±lƒ±ysa true, deƒüilse false
 */
export async function initializeAlpine(options = {}) {
  // Varsayƒ±lan se√ßenekler
  const defaultOptions = {
    initializeNow: true,  // Hemen ba≈ülat
    pageType: detectPageType(),  // Sayfa t√ºr√ºn√º otomatik algƒ±la
    formatters: formatters,  // Tarih, para, vb. formatlama fonksiyonlarƒ±
    setupHtmx: true  // HTMX entegrasyonunu kur
  };
  
  // Kullanƒ±cƒ± se√ßenekleri ile varsayƒ±lanlarƒ± birle≈ütir
  const settings = { ...defaultOptions, ...options };
  
  // Alpine.js y√ºkl√º m√º kontrol et
  if (!window.Alpine) {
    logger.error('Alpine.js y√ºkl√º deƒüil! L√ºtfen √∂nce Alpine.js scriptinin y√ºklenmesini saƒülayƒ±n.');
    return false;
  }
  
  // Alpine.js hen√ºz ba≈ülatƒ±lmƒ±≈ü mƒ± kontrol et
  const viva = ensureNamespace();
  if (viva.alpineInitialized) {
    logger.warn('Alpine.js daha √∂nce ba≈ülatƒ±lmƒ±≈ü. Tekrar ba≈ülatƒ±lmƒ±yor.');
    return false;
  }
  
  logger.info('Alpine.js ba≈ülatƒ±lƒ±yor...');
  
  try {
    // Bile≈üenler, store'lar ve formatlarƒ± kaydet
    await Alpine.registerAll({
      formatters: settings.formatters,
      pageType: settings.pageType
    });
    
    // HTMX entegrasyonunu kur (istenirse)
    if (settings.setupHtmx) {
      setupHtmxIntegration();
    }
    
    // Alpine.js'i hemen ba≈ülat (istenirse)
    if (settings.initializeNow && typeof window.Alpine.start === 'function') {
      window.Alpine.start();
      logger.info('Alpine.js ba≈ülatƒ±ldƒ±.');
      
      // Ba≈üarƒ±yla ba≈ülatƒ±ldƒ±ƒüƒ±nƒ± i≈üaretle
      viva.alpineInitialized = true;
    }
    
    // Dƒ±≈üa aktarƒ±lan API'yi global namespace'e ekle (geriye d√∂n√ºk uyumluluk i√ßin)
    viva.Alpine = viva.Alpine || {};
    viva.Alpine.initialize = initializeAlpine;
    viva.Alpine.reinitializeNode = reinitializeAlpineNode;
    
    return true;
  } catch (error) {
    logger.error(`Alpine.js ba≈ülatma hatasƒ±: ${error.message}`);
    console.error(error);
    return false;
  }
}

/**
 * Belirli bir DOM d√ºƒü√ºm√ºndeki Alpine.js bile≈üenlerini yeniden ba≈ülatƒ±r
 * 
 * @param {Element} node - Yeniden ba≈ülatƒ±lacak d√ºƒü√ºm
 * @returns {boolean} - Ba≈üarƒ±lƒ±ysa true, deƒüilse false
 */
export function reinitializeAlpineNode(node) {
  if (!node || !window.Alpine) {
    logger.error('Alpine.js y√ºkl√º deƒüil veya ge√ßerli bir node saƒülanmadƒ±!');
    return false;
  }
  
  try {
    if (typeof window.Alpine.initTree === 'function') {
      window.Alpine.initTree(node);
      logger.debug('Alpine.js d√ºƒü√ºm√º yeniden ba≈ülatƒ±ldƒ±.');
      return true;
    } else {
      logger.error('Alpine.initTree metodu bulunamadƒ±!');
      return false;
    }
  } catch (error) {
    logger.error(`Alpine.js d√ºƒü√ºm√º yeniden ba≈ülatma hatasƒ±: ${error.message}`);
    return false;
  }
}

/**
 * ≈ûu an g√∂r√ºnt√ºlenen sayfanƒ±n t√ºr√ºn√º URL'e bakarak algƒ±lar
 * 
 * @returns {string|null} - Algƒ±lanan sayfa t√ºr√º veya null
 */
function detectPageType() {
  const path = window.location.pathname;
  
  if (path.includes('/dashboard')) {
    return 'dashboard';
  } else if (path.includes('/accounts/login') || path.includes('/accounts/register')) {
    return 'auth';
  } else if (path.includes('/products')) {
    return 'products';
  } else if (path.includes('/customers')) {
    return 'customers';
  } else if (path.includes('/orders')) {
    return 'orders';
  } else if (path.includes('/invoices')) {
    return 'invoices';
  }
  
  // Belirli bir t√ºrde olmayan sayfalar i√ßin null d√∂nd√ºr
  return null;
}

// Sayfa tamamen y√ºklendiƒüinde √ßalƒ±≈ütƒ±r
if (document.readyState === 'loading') {
  document.addEventListener('DOMContentLoaded', () => initializeAlpine());
} else {
  // Sayfa zaten y√ºklenmi≈üse hemen ba≈ülat
  initializeAlpine();
}

// Dƒ±≈üa aktar
export default {
  initialize: initializeAlpine,
  reinitializeNode: reinitializeAlpineNode,
};